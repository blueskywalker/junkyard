# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: SensorQuery.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='SensorQuery.proto',
  package='datalake',
  syntax='proto3',
  serialized_options=_b('\n\017io.nio.protobuf'),
  serialized_pb=_b('\n\x11SensorQuery.proto\x12\x08\x64\x61talake\"7\n\x0bRespObjects\x12(\n\nrespObject\x18\x01 \x03(\x0b\x32\x14.datalake.RespObject\"i\n\nRespObject\x12\x0f\n\x07\x65ventId\x18\x01 \x01(\x04\x12\x0c\n\x04name\x18\x02 \x01(\t\x12<\n\x14\x63olumnResponseDetail\x18\x03 \x03(\x0b\x32\x1e.datalake.ColumnResponseDetail\"8\n\x14\x43olumnResponseDetail\x12\x11\n\ttimestamp\x18\x01 \x01(\x04\x12\r\n\x05value\x18\x02 \x01(\x0c\"\xae\x01\n\x0bQueryObject\x12\x14\n\x0cstartEventId\x18\x01 \x01(\x04\x12\x12\n\nendEventId\x18\x02 \x01(\x04\x12\x11\n\tvehicleId\x18\x03 \x01(\t\x12\x0e\n\x06tripId\x18\x04 \x01(\t\x12\x36\n\x11\x63olumnQueryDetail\x18\x05 \x03(\x0b\x32\x1b.datalake.ColumnQueryDetail\x12\x1a\n\x12\x63olumnReturnDetail\x18\x06 \x03(\t\"\\\n\x11\x43olumnQueryDetail\x12\x0c\n\x04name\x18\x01 \x01(\t\x12*\n\x08operator\x18\x02 \x01(\x0e\x32\x18.datalake.ColumnOperator\x12\r\n\x05value\x18\x03 \x01(\t*~\n\x0e\x43olumnOperator\x12\r\n\tLESS_THAN\x10\x00\x12\x10\n\x0cGREATER_THAN\x10\x01\x12\x16\n\x12LESS_THAN_OR_EQUAL\x10\x02\x12\x19\n\x15GREATER_THAN_OR_EQUAL\x10\x03\x12\t\n\x05\x45QUAL\x10\x04\x12\r\n\tNOT_EQUAL\x10\x05\x32P\n\x0bSensorQuery\x12\x41\n\x0elistSensorData\x12\x15.datalake.QueryObject\x1a\x14.datalake.RespObject\"\x00\x30\x01\x42\x11\n\x0fio.nio.protobufb\x06proto3')
)

_COLUMNOPERATOR = _descriptor.EnumDescriptor(
  name='ColumnOperator',
  full_name='datalake.ColumnOperator',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='LESS_THAN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GREATER_THAN', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LESS_THAN_OR_EQUAL', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GREATER_THAN_OR_EQUAL', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EQUAL', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_EQUAL', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=524,
  serialized_end=650,
)
_sym_db.RegisterEnumDescriptor(_COLUMNOPERATOR)

ColumnOperator = enum_type_wrapper.EnumTypeWrapper(_COLUMNOPERATOR)
LESS_THAN = 0
GREATER_THAN = 1
LESS_THAN_OR_EQUAL = 2
GREATER_THAN_OR_EQUAL = 3
EQUAL = 4
NOT_EQUAL = 5



_RESPOBJECTS = _descriptor.Descriptor(
  name='RespObjects',
  full_name='datalake.RespObjects',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='respObject', full_name='datalake.RespObjects.respObject', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=31,
  serialized_end=86,
)


_RESPOBJECT = _descriptor.Descriptor(
  name='RespObject',
  full_name='datalake.RespObject',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='eventId', full_name='datalake.RespObject.eventId', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='datalake.RespObject.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='columnResponseDetail', full_name='datalake.RespObject.columnResponseDetail', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=88,
  serialized_end=193,
)


_COLUMNRESPONSEDETAIL = _descriptor.Descriptor(
  name='ColumnResponseDetail',
  full_name='datalake.ColumnResponseDetail',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='datalake.ColumnResponseDetail.timestamp', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='datalake.ColumnResponseDetail.value', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=195,
  serialized_end=251,
)


_QUERYOBJECT = _descriptor.Descriptor(
  name='QueryObject',
  full_name='datalake.QueryObject',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='startEventId', full_name='datalake.QueryObject.startEventId', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='endEventId', full_name='datalake.QueryObject.endEventId', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vehicleId', full_name='datalake.QueryObject.vehicleId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tripId', full_name='datalake.QueryObject.tripId', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='columnQueryDetail', full_name='datalake.QueryObject.columnQueryDetail', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='columnReturnDetail', full_name='datalake.QueryObject.columnReturnDetail', index=5,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=254,
  serialized_end=428,
)


_COLUMNQUERYDETAIL = _descriptor.Descriptor(
  name='ColumnQueryDetail',
  full_name='datalake.ColumnQueryDetail',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='datalake.ColumnQueryDetail.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='operator', full_name='datalake.ColumnQueryDetail.operator', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='datalake.ColumnQueryDetail.value', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=430,
  serialized_end=522,
)

_RESPOBJECTS.fields_by_name['respObject'].message_type = _RESPOBJECT
_RESPOBJECT.fields_by_name['columnResponseDetail'].message_type = _COLUMNRESPONSEDETAIL
_QUERYOBJECT.fields_by_name['columnQueryDetail'].message_type = _COLUMNQUERYDETAIL
_COLUMNQUERYDETAIL.fields_by_name['operator'].enum_type = _COLUMNOPERATOR
DESCRIPTOR.message_types_by_name['RespObjects'] = _RESPOBJECTS
DESCRIPTOR.message_types_by_name['RespObject'] = _RESPOBJECT
DESCRIPTOR.message_types_by_name['ColumnResponseDetail'] = _COLUMNRESPONSEDETAIL
DESCRIPTOR.message_types_by_name['QueryObject'] = _QUERYOBJECT
DESCRIPTOR.message_types_by_name['ColumnQueryDetail'] = _COLUMNQUERYDETAIL
DESCRIPTOR.enum_types_by_name['ColumnOperator'] = _COLUMNOPERATOR
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RespObjects = _reflection.GeneratedProtocolMessageType('RespObjects', (_message.Message,), dict(
  DESCRIPTOR = _RESPOBJECTS,
  __module__ = 'SensorQuery_pb2'
  # @@protoc_insertion_point(class_scope:datalake.RespObjects)
  ))
_sym_db.RegisterMessage(RespObjects)

RespObject = _reflection.GeneratedProtocolMessageType('RespObject', (_message.Message,), dict(
  DESCRIPTOR = _RESPOBJECT,
  __module__ = 'SensorQuery_pb2'
  # @@protoc_insertion_point(class_scope:datalake.RespObject)
  ))
_sym_db.RegisterMessage(RespObject)

ColumnResponseDetail = _reflection.GeneratedProtocolMessageType('ColumnResponseDetail', (_message.Message,), dict(
  DESCRIPTOR = _COLUMNRESPONSEDETAIL,
  __module__ = 'SensorQuery_pb2'
  # @@protoc_insertion_point(class_scope:datalake.ColumnResponseDetail)
  ))
_sym_db.RegisterMessage(ColumnResponseDetail)

QueryObject = _reflection.GeneratedProtocolMessageType('QueryObject', (_message.Message,), dict(
  DESCRIPTOR = _QUERYOBJECT,
  __module__ = 'SensorQuery_pb2'
  # @@protoc_insertion_point(class_scope:datalake.QueryObject)
  ))
_sym_db.RegisterMessage(QueryObject)

ColumnQueryDetail = _reflection.GeneratedProtocolMessageType('ColumnQueryDetail', (_message.Message,), dict(
  DESCRIPTOR = _COLUMNQUERYDETAIL,
  __module__ = 'SensorQuery_pb2'
  # @@protoc_insertion_point(class_scope:datalake.ColumnQueryDetail)
  ))
_sym_db.RegisterMessage(ColumnQueryDetail)


DESCRIPTOR._options = None

_SENSORQUERY = _descriptor.ServiceDescriptor(
  name='SensorQuery',
  full_name='datalake.SensorQuery',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=652,
  serialized_end=732,
  methods=[
  _descriptor.MethodDescriptor(
    name='listSensorData',
    full_name='datalake.SensorQuery.listSensorData',
    index=0,
    containing_service=None,
    input_type=_QUERYOBJECT,
    output_type=_RESPOBJECT,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SENSORQUERY)

DESCRIPTOR.services_by_name['SensorQuery'] = _SENSORQUERY

# @@protoc_insertion_point(module_scope)
